//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.UserServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/login", ReplyAction="http://tempuri.org/IUser/loginResponse")]
        Client.UserServiceReference.UserMessage login(Client.UserServiceReference.RequestUSer request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/login", ReplyAction="http://tempuri.org/IUser/loginResponse")]
        System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> loginAsync(Client.UserServiceReference.RequestUSer request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/register", ReplyAction="http://tempuri.org/IUser/registerResponse")]
        Client.UserServiceReference.UserMessage register(Client.UserServiceReference.RequestUSer request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/register", ReplyAction="http://tempuri.org/IUser/registerResponse")]
        System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> registerAsync(Client.UserServiceReference.RequestUSer request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        Client.UserServiceReference.UserMessage GetUser(Client.UserServiceReference.RequestUSer request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> GetUserAsync(Client.UserServiceReference.RequestUSer request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddPost", ReplyAction="http://tempuri.org/IUser/AddPostResponse")]
        string AddPost(Services.post pst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddPost", ReplyAction="http://tempuri.org/IUser/AddPostResponse")]
        System.Threading.Tasks.Task<string> AddPostAsync(Services.post pst);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestUSer", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RequestUSer {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Services.User user;
        
        public RequestUSer() {
        }
        
        public RequestUSer(Services.User user) {
            this.user = user;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Error;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Services.User user;
        
        public UserMessage() {
        }
        
        public UserMessage(string Error, int StatusCode, Services.User user) {
            this.Error = Error;
            this.StatusCode = StatusCode;
            this.user = user;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : Client.UserServiceReference.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<Client.UserServiceReference.IUser>, Client.UserServiceReference.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.UserServiceReference.UserMessage Client.UserServiceReference.IUser.login(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.login(request);
        }
        
        public string login(ref Services.User user, out int StatusCode) {
            Client.UserServiceReference.RequestUSer inValue = new Client.UserServiceReference.RequestUSer();
            inValue.user = user;
            Client.UserServiceReference.UserMessage retVal = ((Client.UserServiceReference.IUser)(this)).login(inValue);
            StatusCode = retVal.StatusCode;
            user = retVal.user;
            return retVal.Error;
        }
        
        public System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> loginAsync(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.loginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.UserServiceReference.UserMessage Client.UserServiceReference.IUser.register(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.register(request);
        }
        
        public string register(ref Services.User user, out int StatusCode) {
            Client.UserServiceReference.RequestUSer inValue = new Client.UserServiceReference.RequestUSer();
            inValue.user = user;
            Client.UserServiceReference.UserMessage retVal = ((Client.UserServiceReference.IUser)(this)).register(inValue);
            StatusCode = retVal.StatusCode;
            user = retVal.user;
            return retVal.Error;
        }
        
        public System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> registerAsync(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.registerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.UserServiceReference.UserMessage Client.UserServiceReference.IUser.GetUser(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.GetUser(request);
        }
        
        public string GetUser(ref Services.User user, out int StatusCode) {
            Client.UserServiceReference.RequestUSer inValue = new Client.UserServiceReference.RequestUSer();
            inValue.user = user;
            Client.UserServiceReference.UserMessage retVal = ((Client.UserServiceReference.IUser)(this)).GetUser(inValue);
            StatusCode = retVal.StatusCode;
            user = retVal.user;
            return retVal.Error;
        }
        
        public System.Threading.Tasks.Task<Client.UserServiceReference.UserMessage> GetUserAsync(Client.UserServiceReference.RequestUSer request) {
            return base.Channel.GetUserAsync(request);
        }
        
        public string AddPost(Services.post pst) {
            return base.Channel.AddPost(pst);
        }
        
        public System.Threading.Tasks.Task<string> AddPostAsync(Services.post pst) {
            return base.Channel.AddPostAsync(pst);
        }
    }
}
